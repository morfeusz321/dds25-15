Daniel Lihotsky: I made the SAGA architecture and implemented that logic in the code (sending the events and when to rollback etc.) + debugging. Also tried to migrate to async flask (unsuccessfully)
Stanisław Howard: I implemented the order state object. Basically when checking out an order we create a state obejct for it. We track whether the payment of the stock update have succeded. Based on that we trigger logic for a specific scenatio. Additionally I worked on implementing thread locks per row in the database, i. e. when updating records in the db to not allow any thread to modify it.
Jan Bryczkowski: I contributed to the initial design paper, and implemented fault tolerance for database disconnection as well as the entire service disconnection. Also, added a solution for better database visibility, which was later replaced by a better solution.
Filip Błaszczyk: Initial setup. Enabling fault tolerance on the service level and load testing in terms of disconnecting services and databases.
Christiaan Molier: I setup the Kafka message queue, standardized the way we add stuff to the database and some small logic.
